#!/bin/bash

# # Run a given bin with arguments generated by a Python script
# - Pass path to binary as first argument and path to Python script that returns ARGS array as second argument
# - It will run on $ARGS_PATH
# - Pass "CLUSTER" as third argument if running on Ada Lovelace cluster

# Paths
GLOBAL_PATH=$PWD
PROG_PATH=$1
ARGS_PATH=$2
ARGS_DIR=$(dirname $ARGS_PATH)

# Get arguments from Python script
ARGS=($(python ./$ARGS_PATH))

printf "\nRunning %s ${#ARGS[@]} times\n" "$PROJECT"

# Loop on Directives
for ARG in "${ARGS[@]}"
do
	# Make arguments space delim instead of comma delim
	ARG=$(echo $ARG | sed -e "s/,/ /g")

	printf "\nSubmitting $PROG_PATH $ARG\n"

	# Job
    #echo "#!/bin/bash
#cd $GLOBAL_PATH/$ARGS_DIR
#$HOME/tools/julia-1.7.2/bin/julia $PROG_PATH $ARG
#" | sbatch --time=31-00:00 --nodes=1 --ntasks=1 --partition=long --qos=qos_long #--test-only
batch --time=31-00:00 --nodes=1 --ntasks=1 --partition=long --qos=qos_long --wrap="$HOME/tools/julia-1.7.2/bin/julia $PROG_PATH $ARG" #--test-only

	printf "\n"
done
