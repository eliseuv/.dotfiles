#!/usr/bin/env bash

usage() {
    local SCRIPT_NAME
    SCRIPT_NAME=$(basename "$0")
    echo "Usage: $SCRIPT_NAME [-f SEP] [-i INPUT_FILE] DICT_FILE"
    echo "Substitute to contents of INPUT_FILE using DICT_FILE contents as dictionary using SEP as filed separator (defaulting to a comma) and prints it to stdout."
    echo "If no INPUT_FILE is provided, it will use stdin."
}

# Default values
SEP=","
USE_INPUT_FILE=0
INPUT_FILE=""
TEMP_FILE=/tmp/subs_name.temp

# Parse arguments
while getopts "hi:f:" OPT; do
    case "$OPT" in
        i) # Input file
            USE_INPUT_FILE=1
            INPUT_FILE="$OPTARG"
            ;;
        f) # Field separator
            SEP="$OPTARG"
            ;;
        h) # Help
            usage
            exit 0
            ;;
        *) # Unknown argument
            usage
            exit 1
            ;;
    esac
done

shift "$((OPTIND - 1))"
DICT_FILE=$1

# Function that performs substitution on a single line
subs_line() {
    echo "$LINE" >$TEMP_FILE
    # Loop on dict lines
    while read -r DICT_ENTRY; do
        sed -i "s/${DICT_ENTRY%"$SEP"*}/${DICT_ENTRY#*"$SEP"}/g" "$TEMP_FILE"
    done <"$DICT_FILE"
    cat "$TEMP_FILE"
}

if [[ $USE_INPUT_FILE == 1 ]]; then
    # Use input file
    while read -r LINE; do
        subs_line
    done <"$INPUT_FILE"
else
    # Use stdin
    while read -r LINE; do
        subs_line
    done
fi

# Delete temporary file
rm $TEMP_FILE
